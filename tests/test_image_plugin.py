import unittest
from unittest.mock import patch, MagicMock
import sys
import os

# Add the project root to the Python path
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from src.plugins.image_plugin import ImagePlugin
import src.plugins.image_plugin as image_plugin_module

class TestImagePlugin(unittest.TestCase):

    @patch('src.plugins.image_plugin.dalle_generate_image')
    @patch('src.plugins.image_plugin.MattermostClient')
    def test_execute_default_service(self, mock_mm_client, mock_dalle):
        # Patch IMAGE_SERVICE before initializing the plugin
        with patch.object(image_plugin_module, 'IMAGE_SERVICE', 'dalle'):
            # Initialize the plugin after patching IMAGE_SERVICE
            plugin = ImagePlugin()

            # Use a simple valid Base64 string
            mock_dalle.return_value = "aGVsbG8="  # Base64 for 'hello'
            mock_mm_client_instance = mock_mm_client.return_value
            mock_mm_client_instance.upload_file.return_value = "file_id"
            mock_mm_client_instance.post_message.return_value = None  # Assuming post_message returns None

            # Call the execute method
            result = plugin.execute(["test image"], "channel_id", "user_id")

            # Assertions to check that the functions were called as expected
            mock_dalle.assert_called_once_with("test image")
            mock_mm_client_instance.upload_file.assert_called_once_with(
                "channel_id",
                b'hello',  # Decoded bytes
                "generated_image_dalle.png"
            )
            mock_mm_client_instance.post_message.assert_called_once_with(
                "channel_id",
                "Here's the image generated by dalle based on: 'test image'",
                file_ids=["file_id"]
            )
            self.assertIsNone(result)

    def test_execute_unknown_service(self):
        plugin = ImagePlugin()
        result = plugin.execute(["--service", "unknown", "test image"], "channel_id", "user_id")
        self.assertIn("Unknown service: unknown", result)

    def test_execute_no_args(self):
        plugin = ImagePlugin()
        result = plugin.execute([], "channel_id", "user_id")
        self.assertIn("Please provide a description for the image", result)

if __name__ == '__main__':
    unittest.main()
